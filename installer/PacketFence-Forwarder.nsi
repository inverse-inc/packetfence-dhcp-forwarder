; Script generated by the HM NIS Edit Script Wizard.

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "PacketFence Forwarder"
!define PRODUCT_VERSION "1.4"
!define PRODUCT_PUBLISHER "Inverse Inc."
!define PRODUCT_WEB_SITE "http://inverse.ca"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"

; MUI 1.67 compatible ------
!include "MUI.nsh"
; Registry
!include x64.nsh

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\modern-install.ico"
!define MUI_UNICON "${NSISDIR}\Contrib\Graphics\Icons\modern-uninstall.ico"

; Language Selection Dialog Settings
!define MUI_LANGDLL_REGISTRY_ROOT "${PRODUCT_UNINST_ROOT_KEY}"
!define MUI_LANGDLL_REGISTRY_KEY "${PRODUCT_UNINST_KEY}"
!define MUI_LANGDLL_REGISTRY_VALUENAME "NSIS:Language"

; Welcome page
!insertmacro MUI_PAGE_WELCOME
; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
; Finish page
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"
!insertmacro MUI_LANGUAGE "French"

!define CSIDL_COMMONAPPDATA '0x23'


Function openLinkNewWindow
  Push $3
  Exch
  Push $2
  Exch
  Push $1
  Exch
  Push $0
  Exch

  ReadRegStr $0 HKCR "http\shell\open\command" ""
  StrCpy $2 '"'
  StrCpy $1 $0 1
  StrCmp $1 $2 +2 # if path is not enclosed in " look for space as final char
    StrCpy $2 ' '
  StrCpy $3 1
  loop:
    StrCpy $1 $0 1 $3
    StrCmp $1 $2 found
    StrCmp $1 "" found
    IntOp $3 $3 + 1
    Goto loop

  found:
    StrCpy $1 $0 $3
    StrCmp $2 " " +2
      StrCpy $1 '$1"'

  Pop $0
  Exec '$1 $0'
  Pop $0
  Pop $1
  Pop $2
  Pop $3
FunctionEnd

!macro _OpenURL URL
Push "${URL}"
Call openLinkNewWindow
!macroend

!define OpenURL '!insertmacro "_OpenURL"'

; MUI end ------

Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
OutFile "PacketFence-Forwarder-Installer.exe"
InstallDir "$PROGRAMFILES\PacketFence-Forwarder"
ShowInstDetails show
ShowUnInstDetails show

Section -SETTINGS
  SetOutPath "$INSTDIR"
  SetOverwrite ifnewer
SectionEnd

Function .onInit
  !insertmacro MUI_LANGDLL_DISPLAY
  Var /GLOBAL AppDataPath
  System::Call 'shell32::SHGetSpecialFolderPath(i $HWNDPARENT, t .r1, i ${CSIDL_COMMONAPPDATA}, i0)i.r0'
  StrCpy $AppDataPath "$1"
FunctionEnd

Section
findnpcap:
  GetDllVersion "C:\Program Files\Npcap\NPFInstall.exe" $R0 $R1
  ${If} "$R0" != ""
     return
  ${EndIf}
  MessageBox MB_OKCANCEL "Npcap must be installed to continue. Download Npcap?" IDOK openurl IDCANCEL byebye

openurl:
    ${OpenURL} "https://npcap.com/#download"
  MessageBox MB_RETRYCANCEL "Retry check for Npcap" IDRETRY findnpcap IDCANCEL byebye

byebye:
    Abort "Please install npcap you can download it https://npcap.com/#download"

SectionEnd

Section "Principal" SEC01
  SetOutPath "$INSTDIR"
  SetOverwrite ifnewer
  File "packetfence-forwarder-config-generator.exe"
  File "packetfence-forwarder.exe"
  File "nssm.exe"
SectionEnd

Section "Configurator" SEC02
	MessageBox MB_OK \
    "packetfence-forwarder-config-generator.exe will be launched from the install directory. Please answer throughfully as this configuration will be used to start the service at next step."
  ExecWait "$INSTDIR\packetfence-forwarder-config-generator.exe"
SectionEnd

Section "Service Installation" SEC03
	nsExec::Exec '$INSTDIR\nssm.exe stop PacketFence-Forwarder'
	nsExec::Exec '$INSTDIR\nssm.exe remove PacketFence-Forwarder confirm'
	MessageBox MB_OK \
    "PacketFence Forwarder will be installed as a service with previously generated configuration."
	nsExec::ExecToStack '$INSTDIR\nssm.exe install PacketFence-Forwarder "$INSTDIR\packetfence-forwarder.exe"'
	Pop $0
	Pop $1
	${If} $0 != 0
		DetailPrint "Return code of nssm was $0"
		Abort "There was a problem installing the service with nssm. It outputted: $1"
	${EndIf}	
SectionEnd

Section "Service Startup" SEC04
	MessageBox MB_OK \
    "PacketFence Forwarder service will be started with previously generated configuration."
	nsExec::ExecToStack '$INSTDIR\nssm.exe start PacketFence-Forwarder'
	Pop $0
	Pop $1
	${If} $0 == 1
		DetailPrint "Return code of nssm was $0"
		DetailPrint "Cancel and rerun this installer. Make sure the selected Interface is Connected and not a Wireless device prior to running this installer."
		Abort "There was a problem starting the service with nssm. It outputted: $1"
	${EndIf}
	${If} $0 != 0
		DetailPrint "Return code of nssm was $0"
		Abort "There was a problem starting the service with nssm. It outputted: $1"
	${EndIf}
SectionEnd

Section -Post
  WriteUninstaller "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
SectionEnd


Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) was unistalled with success."
FunctionEnd

Function un.onInit
  Var /GLOBAL AppDataPath2
  System::Call 'shell32::SHGetSpecialFolderPath(i $HWNDPARENT, t .r1, i ${CSIDL_COMMONAPPDATA}, i0)i.r0'
  StrCpy $AppDataPath2 "$1"
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "Are you sure you want to uninstall $(^Name) and all its components ?" IDYES +2
  Abort
FunctionEnd

Section Uninstall
  nsExec::Exec '$INSTDIR\nssm.exe stop PacketFence-Forwarder'
  nsExec::Exec '$INSTDIR\nssm.exe remove PacketFence-Forwarder confirm'
  Delete "$INSTDIR\packetfence-forwarder-config-generator.exe"
  Delete "$INSTDIR\nssm.exe"
  Delete "$INSTDIR\packetfence-forwarder.exe"
  Delete "$INSTDIR\PacketFence-Forwarder.toml"
  Delete "$INSTDIR\uninst.exe"
  SetOutPath "$PROGRAMFILES"
  RmDir /r /REBOOTOK "$INSTDIR"
  SetAutoClose true
SectionEnd
